{"version":3,"file":"questionedit.min.js","sources":["../src/questionedit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Backward compatibility file for the old popover.js\n *\n * @module     qtype_multianswerrgx/feedback\n * @copyright  2023 Jun Pataleta <jun@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/* The data is stored in a hidden field */\ndefine(['jquery'], function($) {\n  return {\n    init: function() {\n      // Init the css for the error divs.\n      let paragraphs;\n      let textContent;\n      let indexes = [5, 9];\n      for (let i = 0; i < indexes.length; i++) {\n        $('#id_error_button_group_add_gaps_' + indexes[i]).css({\n          display: 'inline',\n          color: 'red',\n        });\n      }\n      // Check the state of the Checkbox to enable skipping capitalised words or not.\n      var skipcapswordscheck = $('#id_button_group_skip_caps_words');\n\n      /* A click on the Add gaps 1/5 button. */\n      $('#id_button_group_add_gaps_5').on('click', function() {\n        createGaps(5);\n      });\n\n      /* A click on the Add gaps 1/9 button. */\n      $('#id_button_group_add_gaps_9').on('click', function() {\n        createGaps(9);\n      });\n\n      /* A click on the Remove gaps button. */\n      $('#id_button_group_remove_gaps_button').on('click', function() {\n        var iframe = $('#id_questiontext_ifr');\n        var iframeBody = iframe.contents().find('body');\n        textContent = iframeBody.text();\n        paragraphs = iframeBody.find('p').filter(function() {\n          // Exclude paragraphs that contain <img>, <audio>, or <video> tags\n          return $(this).find('img, audio, video').length === 0;\n        });\n        // Regular expression to detect the presence of sub-questions in question text.\n        var regex = /\\{[^}]*[^}]*\\}/g;\n        var containsGaps = regex.test(textContent);\n        let paraText;\n        let cleanedText;\n        if (containsGaps) {\n          for (let i = 0; i < paragraphs.length; i++) {\n            paraText = $(paragraphs[i]).text();\n            cleanedText = paraText.replace(/{[^=]*(=|%100%)([^#}]*)[^}]*}/g, '$2');\n            $(paragraphs[i]).text(cleanedText);\n          }\n        }\n        $('#id_button_group_remove_gaps_button').prop('disabled', true);\n        $('#id_error_button_group_add_gaps_5').html('');\n        $('#id_error_button_group_add_gaps_9').html('');\n        return;\n      });\n\n      /**\n       * Encloses every nth word in square brackets, keeping punctuation outside the brackets.\n       * @param {number} interval - The interval at which to enclose words in brackets.\n       * @returns {string} The modified text with every nth word enclosed in brackets.       *\n       */\n      function createGaps(interval) {\n        // Init error divs.\n        $('#id_error_button_group_add_gaps_5').html('');\n        $('#id_error_button_group_add_gaps_9').html('');\n        var skipcapswords = skipcapswordscheck.prop('checked');\n        const capsWords = new Array();\n        let enoughWords;\n        var iframe = $('#id_questiontext_ifr');\n        var iframeBody = iframe.contents().find('body');\n        textContent = iframeBody.text();\n        paragraphs = iframeBody.find('p').filter(function() {\n          // Exclude paragraphs that contain <img>, <audio>, or <video> tags\n          return $(this).find('img, audio, video').length === 0;\n        });\n        // Regular expression to detect the presence of sub-questions in question text.\n        var pattern = /\\{[^}]*[^}]*\\}/g;\n        // Check if the pattern matches the string\n        if (pattern.test(textContent)) {\n          $('#id_error_button_group_add_gaps_' + interval).html(M.util.get_string(\n            'addgapserror',\n            'qtype_multianswerrgx'\n          ));\n          return;\n        }\n        // Check if there are enough words at least in one \"gappable\" paragraph.\n        let totalWords = 0;\n        let paratext;\n        for (let i = 0; i < paragraphs.length; i++) {\n          paratext = $(paragraphs[i]).text();\n          totalWords = paratext.split(' ');\n          enoughWords = false;\n          if (totalWords.length > interval) {\n            enoughWords = true;\n            continue;\n          }\n        }\n        if (!enoughWords) {\n          $('#id_error_button_group_add_gaps_' + interval).html(M.util.get_string(\n            'tooshortforgapserror',\n            'qtype_multianswerrgx'\n          ));\n          return;\n        }\n        for (let i = 0; i < paragraphs.length; i++) {\n          let paraText = $(paragraphs[i]).text();\n          paraText = paraText.replace(/\\s+/g, ' ').trim();\n          let words = paraText.split(' ');\n          // With many thanks to Mark Johnson for this script.\n          // Loop through the words and enclose every 5th or 9th word in SHORTANSWER marker.\n           let offset = 1;\n           for (let index = 0; index < words.length; index++) {\n             if ((index + offset) % interval === 0) {\n               // Separate the word from any trailing punctuation\n               let word = words[index];\n               let punctuation = '';\n              if (/[.,!?;:]+$/.test(word)) {\n                  punctuation = word.slice(-1); // Get the punctuation mark\n                  word = word.slice(0, -1); // Remove the punctuation from the word\n              }\n              // Check if the word starts with a capital letter\n              if (skipcapswords && word && word[0] === word[0].toUpperCase() && /[A-Za-z]/.test(word[0])\n                  && !capsWords.includes(word)) {\n                // If the word starts with a capital letter, skip the gapping transformation\n                // Do not skip the gapping transformation if capitalised word has already been gapped.\n                offset -= 1;\n                // Add new capitalised word to the capsWords list.\n                capsWords.push(word);\n                continue;\n              }\n              // Enclose the word in SHORTANSWER (SA) brackets, then add back the punctuation\n              words[index] = `{1:SA:=${word}}${punctuation}`;\n            }\n          }\n          // Join the words back into a single string\n          let gappedText = words.join(' ');\n          if (gappedText !== '') {\n            $(paragraphs[i]).text(gappedText);\n          }\n          $('#id_button_group_remove_gaps_button').prop('disabled', false);\n        }\n      }\n    }\n  };\n});\n"],"names":["define","$","init","paragraphs","textContent","indexes","i","length","css","display","color","skipcapswordscheck","createGaps","interval","html","skipcapswords","prop","capsWords","Array","enoughWords","iframeBody","contents","find","text","filter","this","test","M","util","get_string","paratext","totalWords","split","paraText","replace","trim","words","offset","index","word","punctuation","slice","toUpperCase","includes","push","gappedText","join","on","cleanedText"],"mappings":";;;;;;;AAwBAA,2CAAO,CAAC,WAAW,SAASC,SACnB,CACLC,KAAM,eAEAC,WACAC,YACAC,QAAU,CAAC,EAAG,OACb,IAAIC,EAAI,EAAGA,EAAID,QAAQE,OAAQD,IAClCL,EAAE,mCAAqCI,QAAQC,IAAIE,IAAI,CACrDC,QAAS,SACTC,MAAO,YAIPC,mBAAqBV,EAAE,6CA4ClBW,WAAWC,UAElBZ,EAAE,qCAAqCa,KAAK,IAC5Cb,EAAE,qCAAqCa,KAAK,QACxCC,cAAgBJ,mBAAmBK,KAAK,iBACtCC,UAAY,IAAIC,UAClBC,gBAEAC,WADSnB,EAAE,wBACSoB,WAAWC,KAAK,QACxClB,YAAcgB,WAAWG,OACzBpB,WAAaiB,WAAWE,KAAK,KAAKE,QAAO,kBAEa,IAA7CvB,EAAEwB,MAAMH,KAAK,qBAAqBf,aAG7B,kBAEFmB,KAAKtB,yBACfH,EAAE,mCAAqCY,UAAUC,KAAKa,EAAEC,KAAKC,WAC3D,eACA,6BAMAC,SADAC,WAAa,MAEZ,IAAIzB,EAAI,EAAGA,EAAIH,WAAWI,OAAQD,IACrCwB,SAAW7B,EAAEE,WAAWG,IAAIiB,OAC5BQ,WAAaD,SAASE,MAAM,KAC5Bb,aAAc,EACVY,WAAWxB,OAASM,WACtBM,aAAc,MAIbA,gBAOA,IAAIb,EAAI,EAAGA,EAAIH,WAAWI,OAAQD,IAAK,KACtC2B,SAAWhC,EAAEE,WAAWG,IAAIiB,OAChCU,SAAWA,SAASC,QAAQ,OAAQ,KAAKC,WACrCC,MAAQH,SAASD,MAAM,KAGtBK,OAAS,MACR,IAAIC,MAAQ,EAAGA,MAAQF,MAAM7B,OAAQ+B,YACnCA,MAAQD,QAAUxB,UAAa,EAAG,KAEjC0B,KAAOH,MAAME,OACbE,YAAc,MACf,aAAad,KAAKa,QAClBC,YAAcD,KAAKE,OAAO,GAC1BF,KAAOA,KAAKE,MAAM,GAAI,IAGtB1B,eAAiBwB,MAAQA,KAAK,KAAOA,KAAK,GAAGG,eAAiB,WAAWhB,KAAKa,KAAK,MAC/EtB,UAAU0B,SAASJ,MAAO,CAGhCF,QAAU,EAEVpB,UAAU2B,KAAKL,eAIjBH,MAAME,OAAU,UAASC,QAAQC,kBAIjCK,WAAaT,MAAMU,KAAK,KACT,KAAfD,YACF5C,EAAEE,WAAWG,IAAIiB,KAAKsB,YAExB5C,EAAE,uCAAuCe,KAAK,YAAY,QAzC1Df,EAAE,mCAAqCY,UAAUC,KAAKa,EAAEC,KAAKC,WAC3D,uBACA,yBAhFN5B,EAAE,+BAA+B8C,GAAG,SAAS,WAC3CnC,WAAW,MAIbX,EAAE,+BAA+B8C,GAAG,SAAS,WAC3CnC,WAAW,MAIbX,EAAE,uCAAuC8C,GAAG,SAAS,eAE/C3B,WADSnB,EAAE,wBACSoB,WAAWC,KAAK,QACxClB,YAAcgB,WAAWG,OACzBpB,WAAaiB,WAAWE,KAAK,KAAKE,QAAO,kBAEa,IAA7CvB,EAAEwB,MAAMH,KAAK,qBAAqBf,cAKvC0B,SACAe,eAHQ,kBACatB,KAAKtB,iBAIvB,IAAIE,EAAI,EAAGA,EAAIH,WAAWI,OAAQD,IACrC2B,SAAWhC,EAAEE,WAAWG,IAAIiB,OAC5ByB,YAAcf,SAASC,QAAQ,iCAAkC,MACjEjC,EAAEE,WAAWG,IAAIiB,KAAKyB,aAG1B/C,EAAE,uCAAuCe,KAAK,YAAY,GAC1Df,EAAE,qCAAqCa,KAAK,IAC5Cb,EAAE,qCAAqCa,KAAK"}