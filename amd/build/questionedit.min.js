/**
 * Backward compatibility file for the old popover.js
 *
 * @module     qtype_multianswerrgx/feedback
 * @copyright  2023 Jun Pataleta <jun@moodle.com>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("qtype_multianswerrgx/questionedit",["jquery"],(function($){return{init:function(){let indexes=[5,9];for(let i=0;i<indexes.length;i++)$("#id_error_button_group_add_gaps_"+indexes[i]).css({display:"inline",color:"red"});function createGaps(interval){$("#id_error_button_group_add_gaps_5").html(""),$("#id_error_button_group_add_gaps_9").html("");var iframeBody=$("#id_questiontext_ifr").contents().find("body"),textContent=iframeBody.text(),paragraphs=iframeBody.find("p");if(/\{[^}]*[^}]*\}/g.test(textContent))return void $("#id_error_button_group_add_gaps_"+interval).html(M.util.get_string("addgapserror","qtype_multianswerrgx"));if(textContent.split(" ").length<interval)return $("#id_error_button_group_add_gaps_"+interval).html(M.util.get_string("tooshortforgapserror","qtype_multianswerrgx")),"";for(let i=0;i<paragraphs.length;i++){let words=$(paragraphs[i]).text().split(" ");for(let index=0;index<words.length;index++)if((index+1)%interval==0){let word=words[index],punctuation="";if(/[.,!?;:]+$/.test(word)&&(punctuation=word.slice(-1),word=word.slice(0,-1)),word&&word[0]===word[0].toUpperCase()&&/[A-Za-z]/.test(word[0]))continue;words[index]=`{1:SA:=${word}}${punctuation}`}let gappedText=words.join(" ");""!==gappedText&&$(paragraphs[i]).text(gappedText),$("#id_button_group_remove_gaps_button").prop("disabled",!1)}}$("#id_button_group_add_gaps_5").on("click",(function(){createGaps(5)})),$("#id_button_group_add_gaps_9").on("click",(function(){createGaps(9)})),$("#id_button_group_remove_gaps_button").on("click",(function(){var iframeBody=$("#id_questiontext_ifr").contents().find("body"),textContent=iframeBody.text(),paragraphs=iframeBody.find("p");let paraText;if(/\{[^}]*[^}]*\}/g.test(textContent))for(let i=0;i<paragraphs.length;i++){paraText=$(paragraphs[i]).text();const cleanedText=paraText.replace(/\{[^:]+:[^:]+:=(.*?)(#.*?)?\}/g,"$1");$(paragraphs[i]).text(cleanedText)}$("#id_button_group_remove_gaps_button").prop("disabled",!0),$("#id_error_button_group_add_gaps_5").html(""),$("#id_error_button_group_add_gaps_9").html("")}))}}}));

//# sourceMappingURL=questionedit.min.js.map